from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi
import os
uri = "mongodb+srv://fmradioalex:53e2rG6001E3JJz9@ifmradio.6zcczaa.mongodb.net/?retryWrites=true&w=majority&appName=IFmRadio"

# Create a new client and connect to the server
client = MongoClient(uri, server_api=ServerApi('1'))

db = client.dc02
# Send a ping to confirm a successful connection

def parse_input(user_input):
    cmd, *args = user_input.split()
    cmd = cmd.strip().lower()
    return cmd, *args

def update_cat_age():
    db.cats.update_one(
        {"name":input("Name: ")},
        {
            "$set": {"age": input("New age cat: ")} 
        }
    )
    print(f"–û–Ω–æ–≤–ª–µ–Ω–æ –≤—ñ–∫ –∫–æ—Ç–∞")

def add_cat_feature():
    db.cats.update_one(
        {'name': input("Name: ")},

        {       
            '$push': {'features': (input("Features: ")).split()}
        })
    print(f"–î–æ–¥–∞–Ω–æ –Ω–æ–≤—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –¥–æ —Å–ø–∏—Å–∫—É features –∫–æ—Ç–∞.")

def creat_cats():
    db.cats.insert_one({
            "name": input("Name: "),
            "age": input("age: "),
            "features": (input("Features: ")).split(),
        })
    print("Create new cat üòª")

def all_cats():
    print(list(db.cats.find()))

def find_cats_name():
    find_name_cat=input("Find cats, Name: ")
    print(list(db.cats.find({"Name": find_name_cat})))

def delete_in_name_cat():
    db.cats.delete_one({"name":input("Name: ")})
    print("delete cats üòø")

try:
    def main():
        os.system('cls')
        print("Hello pls input comamnd help")
        while True:
            user_input = input("Enter a command: ")
            command, *args = parse_input(user_input)

            if command == "all":
                # –í–∏–≤–µ—Å—Ç–∏ —É—Å—ñ—Ö –∫–æ—Ç—ñ–≤
                all_cats()


            elif command in["find name",'find','1']:
                # –ó–Ω–∞–π—Ç–∏ –∫–æ—Ç–∞ –∑–∞ name 
                find_cats_name()


            elif command in ['change age','2']:
                #–°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –¥–æ–∑–≤–æ–ª—è—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –æ–Ω–æ–≤–∏—Ç–∏ –≤—ñ–∫ –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º.    
                update_cat_age()


            elif command in ['add features','3']:
                #–°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –¥–æ–∑–≤–æ–ª—è—î –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –¥–æ —Å–ø–∏—Å–∫—É features –∫–æ—Ç–∞ –∑–∞ —ñ–º'—è–º
                add_cat_feature()


            elif command in ["delete",'4']:
                # –†–µ–∞–ª—ñ–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó –∑–∞ —ñ–º'—è–º —Ç–≤–∞—Ä–∏–Ω–∏
                delete_in_name_cat()
            elif command =='add':
                creat_cats()

            elif command == 'delete all':
                db.cats.delete_many({})
            elif command =='cls':
                os.system('cls')
            elif command=='help':
                print(f'All commands:\nall\nchange age |2\nadd features |3\ndelete |4\nadd\ndelete all')
            elif command=='exit':
                print("close app")
                break
            
except Exception as e:
    print(e)

if __name__=="__main__":
    main()
